一、事件修饰符
	Vue.js 为 v-on 提供了事件修饰符。之前提过，修饰符是由点开头的指令后缀来表示的。
		.stop
		.prevent
		.capture
		.self
		.once
		<!-- 添加事件监听器时使用事件捕获模式 -->
		<!-- 即元素自身触发的事件先在此处处理，然后才交由内部元素进行处理 -->
		<div v-on:click.capture="doThis">...</div>

		<!-- 只当在 event.target 是当前元素自身时触发处理函数 -->
		<!-- 即事件不是从内部元素触发的 -->
		<div v-on:click.self="doThat">...</div>

		<!-- 滚动事件的默认行为 (即滚动行为) 将会立即触发 -->
		<!-- 而不会等待 `onScroll` 完成  -->
		<!-- 这其中包含 `event.preventDefault()` 的情况 -->
		<div v-on:scroll.passive="onScroll">...</div>
	注意：
		1.使用修饰符时，顺序很重要；相应的代码会以同样的顺序产生。因此，用 @click.prevent.self 会阻止所有的点击，而 @click.self.prevent 只会阻止对元素自身的点击。
		2.不要把 .passive 和 .prevent 一起使用，因为 .prevent 将会被忽略，同时浏览器可能会向你展示一个警告。请记住，.passive 会告诉浏览器你不想阻止事件的默认行为。
二、按键修饰符
	按键别名：
		.enter
		.tab
		.delete (捕获“删除”和“退格”键)
		.esc
		.space
		.up
		.down
		.left
		.right
	例如：
		<input type="text" v-on:keyup.13='submit' placeholder="回车">
		<input type="text" v-on:keyup.enter='submit' placeholder="回车">
		<input type="text" v-on:keyup.delete='submit' placeholder="删除">
		<input type="text" v-on:keyup.up='submit' placeholder="向上">
		<input type="text" v-on:keyup.down='submit' placeholder="向下">
		<input type="text" v-on:keyup.v='submit' placeholder="v字母键">
		<input type="text" v-on:keyup.f1='submit' placeholder="F1键">
		<input type="text" v-on:keyup.up='submit' placeholder="向上键">

三、鼠标按钮修饰符
	.left
	.right
	.middle
	这些修饰符会限制处理函数仅响应特定的鼠标按钮。

四、系统修饰键
	可以用如下修饰符来实现仅在按下相应按键时才触发鼠标或键盘事件的监听器。
	.ctrl
	.alt
	.shift
	.meta